#
# Tmux config for lazy programmers that often need to work over remote SSH
# connections. Keybindings in this config are inspired by the default i3
# keybindings. Keybindings in this config assumes a Swedish keyboard layout, but
# changing key combinations should be trivial if needed.
#
# Author: Mikael Henriksson (www.github.com/miklhh)
#

# Enable tmux true color. Should work with tmux version 2.2 and above.
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",*256col*:Tc"

# Use default Vim keybindings when in copy mode.
setw -g mode-keys vi

# Lower escape time, preferably to zero. From the tmux man page:
#
#   escape-time time
#           Set the time in milliseconds for which tmux waits after an escape is
#           input to determine if it is part of a function or meta key sequences.
#           The default is 500 milliseconds.
#
set -sg escape-time 0

# Bind tmux prefix key to <C-a>. Just like GNU Screen prefix.
unbind C-b
set -g prefix C-a

# Let window base index start from one, instead of the default 0.
set -g base-index 1

# Prefix followed by <C-a> for last window. This allows the user to <C-a>+<C-a>
# to get to the last window.
bind-key C-a last-window

# <Meta+.> for tmux command mode.
bind-key -n M-. command

# i3 like pane switching.
bind-key -r j select-pane -L
bind-key -r ö select-pane -R
bind-key -r k select-pane -D
bind-key -r l select-pane -U
bind-key -n M-j select-pane -L
bind-key -n M-ö select-pane -R
bind-key -n M-k select-pane -D
bind-key -n M-l select-pane -U

# i3 inspiered pane resizing.
bind-key -r J resize-pane -L 10
bind-key -r Ö resize-pane -R 10
bind-key -r K resize-pane -D 5
bind-key -r L resize-pane -U 5
bind-key -n M-J resize-pane -L 10
bind-key -n M-Ö resize-pane -R 10
bind-key -n M-K resize-pane -D 5
bind-key -n M-L resize-pane -U 5

# Select active tmux window.
bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t :9

# Tmux pane-zoom with <Meta+f> as in Fullscreen.
bind-key -n M-f resize-pane -Z

# Swap marked pane with next/previous pane.
bind-key -n M-7 swap-pane -U
bind-key -n M-0 swap-pane -D

# Move the current pane to window 'n' with <Meta+Shift+'n'> for 'n' in {1,2,3,..
# ..,9}. If window 'n' does not exist yet, create it first and then move the
# current paneto it. If window 'n' do exist, the current pane will be attached
# horizonaly to the last selected pane in that window. In both cases, the window
# which the pane is moved from will continue as active window.
bind-key -n M-!  if-shell 'tmux join-pane -h -d -t :1' '' 'new-window -d -t :1 ; join-pane -h -d -t :1 ; kill-pane -t :1'
bind-key -n M-\" if-shell 'tmux join-pane -h -d -t :2' '' 'new-window -d -t :2 ; join-pane -h -d -t :2 ; kill-pane -t :2'
bind-key -n M-#  if-shell 'tmux join-pane -h -d -t :3' '' 'new-window -d -t :3 ; join-pane -h -d -t :3 ; kill-pane -t :3'
bind-key -n M-¤  if-shell 'tmux join-pane -h -d -t :4' '' 'new-window -d -t :4 ; join-pane -h -d -t :4 ; kill-pane -t :4'
bind-key -n M-%  if-shell 'tmux join-pane -h -d -t :5' '' 'new-window -d -t :5 ; join-pane -h -d -t :5 ; kill-pane -t :5'
bind-key -n M-&  if-shell 'tmux join-pane -h -d -t :6' '' 'new-window -d -t :6 ; join-pane -h -d -t :6 ; kill-pane -t :6'
bind-key -n M-/  if-shell 'tmux join-pane -h -d -t :7' '' 'new-window -d -t :7 ; join-pane -h -d -t :7 ; kill-pane -t :7'
bind-key -n M-(  if-shell 'tmux join-pane -h -d -t :8' '' 'new-window -d -t :8 ; join-pane -h -d -t :8 ; kill-pane -t :8'
bind-key -n M-)  if-shell 'tmux join-pane -h -d -t :9' '' 'new-window -d -t :9 ; join-pane -h -d -t :9 ; kill-pane -t :9'

